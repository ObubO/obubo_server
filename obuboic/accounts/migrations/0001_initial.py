# Generated by Django 4.2.7 on 2025-05-29 17:01

import accounts.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True, validators=[accounts.validators.validate_id], verbose_name='아이디')),
                ('password', models.CharField(max_length=255, validators=[accounts.validators.validate_password], verbose_name='비밀번호')),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True, verbose_name='refresh_token')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_social', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자 목록',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='AuthTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=11, validators=[accounts.validators.validate_phone], verbose_name='전화번호')),
                ('code', models.CharField(max_length=6, verbose_name='인증번호')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Terms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='약관명')),
                ('content', models.TextField(verbose_name='약관내용')),
                ('is_necessary', models.BooleanField(default=True, verbose_name='필수여부')),
            ],
            options={
                'verbose_name': '이용약관',
                'verbose_name_plural': '이용약관 목록',
                'db_table': 'terms',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='회원유형')),
            ],
            options={
                'verbose_name': '회원유형',
                'verbose_name_plural': '회원유형 목록',
                'db_table': 'user_type',
            },
        ),
        migrations.CreateModel(
            name='UserTerms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_consent', models.CharField(choices=[('False', '비동의'), ('True', '동의')], max_length=5, verbose_name='동의여부')),
                ('consent_date', models.DateField(auto_now_add=True, verbose_name='동의날짜')),
                ('terms', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.terms')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '이용약관 동의',
                'verbose_name_plural': '이용약관 동의 목록',
                'db_table': 'user_terms',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10, null=True, validators=[accounts.validators.validate_name], verbose_name='이름')),
                ('nickname', models.CharField(blank=True, max_length=20, null=True, unique=True, validators=[accounts.validators.validate_nickname], verbose_name='닉네임')),
                ('gender', models.CharField(blank=True, choices=[('M', 'MAN'), ('W', 'WOMAN')], max_length=1, null=True, verbose_name='성별')),
                ('birth', models.DateField(blank=True, null=True, verbose_name='생년월일')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[accounts.validators.validate_phone], verbose_name='전화번호')),
                ('email', models.EmailField(blank=True, max_length=50, null=True, unique=True, verbose_name='이메일')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profiles', to=settings.AUTH_USER_MODEL)),
                ('user_type', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.usertype')),
            ],
            options={
                'verbose_name': '회원정보',
                'verbose_name_plural': '회원정보 목록',
                'db_table': 'user_profile',
            },
        ),
    ]
